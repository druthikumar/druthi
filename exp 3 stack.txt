#include <stdio.h>
#include <stdlib.h>
#define maxsize 5
int stack[maxsize], top = -1, flag = 0, flag1=0;
int i, temp=-1, item, rev[maxsize];
void push() 
{
 if (top == maxsize - 1)
 {
printf("\nStack overflow");
 }
 else
 {
printf("Enter the element to be inserted:\t");
scanf("%d", &item);
 top = top + 1;
Page | 17
 stack[top] = item;
 }
 temp = top;
}
void pop()
{
 if (top == -1)
 {
printf("Stack Underflow");
 flag1=0;
 }
 else
 {
 item = stack[top];
 top = top - 1;
 flag1 = 1;
 }
}
void pali()
{
i = 0;
 if (top == -1)
 {
printf("Push some elements into the stackfirst\n");
 }
 else
 {
Page | 18
 while (top >= 0)
 
{
 rev[i] = stack[top];
pop();
i++;
 
}
 top = temp;
i=temp;
 while (i>=0 )
 
{
 if (stack[top] == rev[i])
 
{
 
top--
;
i--
;
 if (i == 0 && top == 0)
 
{
 flag=1;
 break;
 
}
 
}
 else
 
{
printf("Not Palindrome
\n");
 flag=0;
 break;
 
}
 
}
Page | 19
 if(flag==1)
 {
printf("Palindrome\n");
 }
 }
}
void display() 
{
 int i;
 top = temp;
 if (top <= -1) {
printf("\nStack is empty");
 } 
 else 
 {
printf("\nThe Stack elements are\n");
 for (i = top; i>= 0; i--) {
printf("%d\n", stack[i]);
 }
 }
}
int main() 
{
 int choice;
 do 
 {
printf("\n_____STACK OPERATION_____\n");
Page | 20
printf("1.Push\n2.Pop\n3.Palindrome\n4.Display\n5.Exit\n");
printf("----------");
printf("\nEnter your choice:\t");
scanf("%d", &choice);
 switch (choice) 
 {
 case 1:
push();
 break;
 case 2:
pop();
 if(flag1==1)
 {
printf("\nThe popped element:%d\t",item);
 temp = top;
 }
 break;
 case 3:
pali();
 top = temp;
 break;
 case 4:
display();
 break;
 case 5:
exit(0);
Page | 21
 break;
 default:
printf("\ninvalid Choice\n");
 }
}while(1);
 return 0;
}